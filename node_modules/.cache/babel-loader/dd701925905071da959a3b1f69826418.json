{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Projetos/sd-017-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicAPI';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.musicApi = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const music = await getMusics(id).then(res => res);\n      const collection = [];\n      const track = [];\n      music.filter(e => {\n        if (e.kind !== 'song') {\n          return collection.push(e);\n        }\n\n        return track.push(e);\n      });\n      this.setState({\n        album: track\n      });\n    };\n\n    this.state = {\n      album: [],\n      info: {\n        title: collectionName,\n        image: artworkUrl100,\n        name: artistName\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.musicApi();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.number)\n  })\n}.isRequired;\nexport default Album;","map":{"version":3,"sources":["/home/felipe/Projetos/sd-017-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","getMusics","Header","Album","Component","constructor","musicApi","match","params","id","props","music","then","res","collection","track","filter","e","kind","push","setState","album","state","info","title","collectionName","image","artworkUrl100","name","artistName","componentDidMount","render","propTypes","shape","objectOf","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,QAjBc,GAiBH,YAAY;AACrB,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAAgC,KAAKC,KAA3C;AACA,YAAMC,KAAK,GAAG,MAAMV,SAAS,CAACQ,EAAD,CAAT,CAAcG,IAAd,CAAoBC,GAAD,IAASA,GAA5B,CAApB;AACA,YAAMC,UAAU,GAAG,EAAnB;AACA,YAAMC,KAAK,GAAG,EAAd;AACAJ,MAAAA,KAAK,CAACK,MAAN,CAAcC,CAAD,IAAO;AAClB,YAAIA,CAAC,CAACC,IAAF,KAAW,MAAf,EAAuB;AACrB,iBAAOJ,UAAU,CAACK,IAAX,CAAgBF,CAAhB,CAAP;AACD;;AACD,eAAOF,KAAK,CAACI,IAAN,CAAWF,CAAX,CAAP;AACD,OALD;AAMA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEN;AAAT,OAAd;AACD,KA7Ba;;AAGZ,SAAKO,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEC,cADH;AAEJC,QAAAA,KAAK,EAAEC,aAFH;AAGJC,QAAAA,IAAI,EAAEC;AAHF;AAFK,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,QAAL;AACD;;AAgBDyB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;;AAvCiC;;AA0CpC5B,KAAK,CAAC6B,SAAN,GAAkB;AAChBzB,EAAAA,KAAK,EAAEP,SAAS,CAACiC,KAAV,CAAgB;AACrBzB,IAAAA,MAAM,EAAER,SAAS,CAACkC,QAAV,CAAmBlC,SAAS,CAACmC,MAA7B;AADa,GAAhB;AADS,EAIhBC,UAJF;AAMA,eAAejC,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicAPI';\nimport Header from '../components/Header';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      album: [],\n      info: {\n        title: collectionName,\n        image: artworkUrl100,\n        name: artistName,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.musicApi();\n  }\n\n  musicApi = async () => {\n    const { match: { params: { id } } } = this.props;\n    const music = await getMusics(id).then((res) => res);\n    const collection = [];\n    const track = [];\n    music.filter((e) => {\n      if (e.kind !== 'song') {\n        return collection.push(e);\n      }\n      return track.push(e);\n    });\n    this.setState({ album: track });\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <h1>Album</h1>\n      </>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.number),\n  }),\n}.isRequired;\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}