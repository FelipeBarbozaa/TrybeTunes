{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Projetos/sd-017-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicAPI';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.musicApi = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const music = await getMusics(id).then(res => res);\n      const collection = [];\n      const track = [];\n      music.filter(e => {\n        if (e.kind !== 'song') {\n          return collection.push(e);\n        }\n\n        return track.push(e);\n      });\n      const {\n        artworkUrl100,\n        artistName,\n        collectionName\n      } = collection[0];\n      this.setState({\n        album: [...track],\n        loading: false,\n        albumLength: music.length,\n        info: {\n          title: collectionName,\n          image: artworkUrl100,\n          name: artistName\n        }\n      });\n    };\n\n    this.state = {\n      loading: true,\n      album: [],\n      info: {\n        title: '',\n        image: '',\n        name: ''\n      },\n      albumLength: 0\n    };\n    this.musicApi = this.musicApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.musicApi();\n  }\n\n  render() {\n    const {\n      loading,\n      albumLength\n    } = this.state;\n    const {\n      info: {\n        title,\n        image,\n        name\n      }\n    } = this.state;\n    let render = null;\n\n    if (albumLength > 0) {\n      render = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"album-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"albumId\",\n          \"data-testid\": \"page-album\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"album-name\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"artist-name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound\",\n          children: \"))\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this) : null, albumLength > 0 ? render : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.number)\n  })\n}.isRequired;\nexport default Album;","map":{"version":3,"sources":["/home/felipe/Projetos/sd-017-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","getMusics","Loading","MusicCard","Album","Component","constructor","musicApi","match","params","id","props","music","then","res","collection","track","filter","e","kind","push","artworkUrl100","artistName","collectionName","setState","album","loading","albumLength","length","info","title","image","name","state","bind","componentDidMount","render","propTypes","shape","objectOf","number","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicAPI';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      album: [],\n      info: {\n        title: '',\n        image: '',\n        name: '',\n      },\n      albumLength: 0,\n    };\n\n    this.musicApi = this.musicApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.musicApi();\n  }\n\n  musicApi = async () => {\n    const { match: { params: { id } } } = this.props;\n    const music = await getMusics(id).then((res) => res);\n    const collection = [];\n    const track = [];\n    music.filter((e) => {\n      if (e.kind !== 'song') {\n        return collection.push(e);\n      }\n      return track.push(e);\n    });\n\n    const { artworkUrl100, artistName, collectionName } = collection[0];\n\n    this.setState({\n      album: [...track],\n      loading: false,\n      albumLength: music.length,\n      info: {\n        title: collectionName,\n        image: artworkUrl100,\n        name: artistName,\n      },\n    });\n  }\n\n  render() {\n    const { loading, albumLength } = this.state;\n    const { info: { title, image, name } } = this.state;\n\n    let render = null;\n    if (albumLength > 0) {\n      render = (\n        <div id=\"album-container\">\n          <div id=\"albumId\" data-testid=\"page-album\">\n            <img src={ image } alt={ name } />\n            <h2 data-testid=\"album-name\">{ title }</h2>\n            <p data-testid=\"artist-name\">{ name }</p>\n          </div>\n          <div className=\"sound\">\n            ))\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        {loading ? <Loading /> : null }\n        {albumLength > 0 ? render : null}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.number),\n  }),\n}.isRequired;\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}