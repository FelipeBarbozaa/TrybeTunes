{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Projetos/sd-017-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      load: false,\n      favorite: false\n    };\n    this.getMusic = this.getMusic.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      trackId\n    } = this.props;\n    getFavoriteSongs().then(res => {\n      res.forEach(e => {\n        if (e.trackId === trackId) {\n          this.setState({\n            favorite: true\n          });\n        }\n      });\n    });\n  }\n\n  async getMusic(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      favorite\n    } = this.state;\n    this.setState({\n      load: true\n    });\n    await getMusics(target.id).then(data => addSong(data)).then(() => {\n      this.setState({\n        load: false,\n        favorite: !favorite\n      });\n    });\n  }\n\n  render() {\n    const {\n      load,\n      favorite\n    } = this.state;\n    const {\n      previewUrl,\n      trackName,\n      trackId\n    } = this.props;\n\n    const teste = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-music\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackId,\n          id: \"teste2\",\n          children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: favorite,\n            \"data-testid\": `checkbox-music-${trackId}`,\n            type: \"checkbox\",\n            id: trackId,\n            onChange: this.getMusic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: heart1,\n            id: \"img-favorite\",\n            alt: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: load ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"carregando\",\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this) : teste\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/felipe/Projetos/sd-017-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","getMusics","MusicCard","Component","constructor","state","load","favorite","getMusic","bind","componentDidMount","trackId","props","getFavoriteSongs","then","res","forEach","e","setState","target","id","data","addSong","render","previewUrl","trackName","teste","heart1","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicAPI';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      load: false,\n      favorite: false,\n    };\n\n    this.getMusic = this.getMusic.bind(this);\n  }\n\n  componentDidMount() {\n    const { trackId } = this.props;\n    getFavoriteSongs()\n      .then((res) => {\n        res.forEach((e) => {\n          if (e.trackId === trackId) {\n            this.setState({ favorite: true });\n          }\n        });\n      });\n  }\n\n  async getMusic({ target }) {\n    const { favorite } = this.state;\n    this.setState({ load: true });\n    await getMusics(target.id)\n      .then((data) => addSong(data))\n      .then(() => {\n        this.setState({ load: false, favorite: !favorite });\n      });\n  }\n\n  render() {\n    const { load, favorite } = this.state;\n    const { previewUrl, trackName, trackId } = this.props;\n    const teste = (\n      <div>\n        <p className=\"line\" />\n        <div className=\"album-list\">\n          <div className=\"name-music\">\n            <p>{ trackName }</p>\n          </div>\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador n√£o suporta o elemento\n            <code>audio</code>\n          </audio>\n          <label\n            htmlFor={ trackId }\n            id=\"teste2\"\n          >\n            Favorita\n            <input\n              checked={ favorite }\n              data-testid={ `checkbox-music-${trackId}` }\n              type=\"checkbox\"\n              id={ trackId }\n              onChange={ this.getMusic }\n            />\n            <img src={ heart1 } id=\"img-favorite\" alt=\"favorite\" />\n          </label>\n\n        </div>\n      </div>\n    );\n    return (\n      <div>\n        {load ? <p className=\"carregando\">Carregando...</p> : teste}\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}